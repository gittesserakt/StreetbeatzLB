version: "3.9"
services:
    builder:
        container_name: builder-sb
        build:
            context: .
            dockerfile: builder.dockerfile
        volumes:
            - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/10/docker/builds:/builds
            - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/10/StreetbeatzLB_Backend:/backend
            - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/10/StreetbeatzLB_Frontend:/frontend
        environment:
            SPRING_PROFILES_ACTIVE: prod
            ACTIVE: true
    mariadb:
        container_name: mariadb-sb
        build:
            context: .
            dockerfile: mariadb.dockerfile
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: SM3ax4EhhWFkXW
            MYSQL_DATABASE: streetbeatzlbdb
            MYSQL_USER: streetbeatzlb_mariadb_admin
            MYSQL_PASSWORD: streetbeatzlb
        networks:
            - backend
        depends_on:
            builder:
                condition: service_completed_successfully
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "mariadb" ]
            timeout: 20s
            retries: 10
    tomcat:
        container_name: tomcat-sb
        build:
            context: .
            dockerfile: tomcat.dockerfile
        ports:
            - "8443:8443"
        restart: always
        networks:
            - backend
        volumes:
            - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/10/docker/builds/backend:/var/www/streetbeatzlb
            - /var/snap/docker/common/var-lib-docker/volumes/StreetbeatzLB_Volume/_data:/data
        depends_on:
            builder:
                condition: service_completed_successfully
            mariadb:
                condition: service_healthy
    nginx:
        container_name: nginx-sb
        build:
            context: .
            dockerfile: nginx.dockerfile
        ports:
            - "443:443"
        networks:
            - backend
        volumes:
            - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/10/docker/builds/frontend:/usr/share/nginx/
            - /var/snap/docker/common/var-lib-docker/volumes/StreetbeatzLB_Volume/_data:/data
        depends_on:
            builder:
                condition: service_completed_successfully
            tomcat:
                condition: service_started
networks:
    backend:
        name: backend