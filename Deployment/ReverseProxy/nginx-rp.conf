# Set default server block
server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Redirect all HTTP requests to HTTPS
    return 301 https://hjetter.ddns.net$request_uri;
}

# Set up HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;

    # SSL/TLS configuration
    ssl_certificate /data/certs/hjetter_ddns_net.pem;
    ssl_certificate_key /data/certs/hjetter.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;

    # static site configuration
    # application dashboard configuration
    location / {
        root /usr/share/nginx/html;
        index index.html;
    }

    # maintainence page configuration
    location /maintenance {
        root /usr/share/nginx/html;
        index maintenance.html;
    }

    # Proxy configuration for StreetBeatzLB
    location /streetbeatzlb/api {
        proxy_pass http://192.168.0.50:8181/streetbeatzlb/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass Auth0 session cookie and JWT token
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Authorization $http_authorization;
    }

    location /streetbeatzlb {
        rewrite ^/streetbeatzlb/(.*)$ /$1 break;
        proxy_pass http://192.168.0.50:81;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass Auth0 session cookie and JWT token
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Authorization $http_authorization;
    }

    # Proxy configuration for Spuga
    location /spuga {
        proxy_pass http://192.168.0.50:82;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass Auth0 session cookie and JWT token
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Authorization $http_authorization;
    }

    location /spuga/api {
        proxy_pass http://192.168.0.50:82/spuga/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass Auth0 session cookie and JWT token
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Authorization $http_authorization;
    }

    # Proxy configuration for OSRM
    location /osrm {
        rewrite ^/osrm/(.*)$ /$1 break;
        proxy_pass http://192.168.0.50:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Pass Auth0 session cookie and JWT token
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Authorization $http_authorization;
    }
}