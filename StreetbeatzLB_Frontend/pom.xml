<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hbell.tutorials</groupId>
    <artifactId>streetbeatzlb</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>streetbeatzlb</name>

    <properties>
        <!-- The final name of the war file -->
        <war.name>${project.artifactId}</war.name>

        <!-- The working directory, where the application will be compiled -->
        <work.dir>target/work</work.dir>

        <!-- The path name of the application when it will be deployed -->
        <application.path>${project.artifactId}</application.path>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- The build task defined in the package.json to run for the application build -->
        <build.name>build</build.name>
    </properties>

    <build>

        <finalName>${war.name}</finalName>

        <plugins>

            <!--
            This plugin will help us to copy the application sources in a working directory
            before compiling it.

            It's important to compile the application inside the application root (in case of config modifications made by npm)
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-webapp</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${work.dir}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>./</directory>
                                    <excludes>
                                        <exclude>target/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            This plugin will run necessary npm command to build the application
            In this order the plugin will :
            - Download and install npm and node
            - Run the build target to build the application
            -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <configuration>
                    <nodeVersion>v18.15.0</nodeVersion>
                    <npmVersion>9.5.0</npmVersion>
                    <workingDirectory>${work.dir}/</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run ${build.name}</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- This plugin will copy the compiled application in a final directory. -->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources-from-compiled-app</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${war.name}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${work.dir}/dist/${project.artifactId}/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- This plugin will build the war file. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
